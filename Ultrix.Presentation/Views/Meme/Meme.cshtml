@using Ultrix.Presentation.DTOs
@model MemeDto

<div class="row">
    <div class="center-align">
        <div class="card blue-grey darken-2">
            <div class="card-title" style="color: white; font-weight:500;padding-left: 5px;"> @Model.Title </div>
            <div class="card-image">
                @{
                    if (Model.VideoUrl != null)
                    {
                        <video controls>
                            <source src="@Model.VideoUrl" type="video/mp4" />
                        </video>
                    }
                    else
                    {
                        <img src="@Model.ImageUrl"/>
                    }
                }
            </div>
            <div class="card-action" style="height: 150px">
                <p><a href="@Model.PageUrl" style="color: white">Source</a></p>
                <div>
                    @if (User.Identity.IsAuthenticated)
                    {
                        List<CollectionDTO> collections = new List<CollectionDTO>(); // TempData.Peek<List<CollectionDTO>>("collections");
                        List<FollowingDto> mutualFollowings = new List<FollowingDto>(); // TempData.Peek<List<FollowingDTO>>("mutualFollowings");

                        <form class="col s1" method="post" id="thumb_upForm">
                            <input type="hidden" id="MemeId" name="MemeId" value="@Model.Id" />
                            <input type="hidden" id="IsLike" name="IsLike" value="true" />
                            <input type="hidden" id="IsLiked" name="IsLiked=" value="false" />
                            <i class="material-icons meme-icon" onclick="sendForm('like')">thumb_up</i>
                        </form>
                        <form class="col s1" method="post" id="thumb_downForm">
                            <input type="hidden" id="MemeId" name="MemeId" value="@Model.Id" />
                            <input type="hidden" id="IsLike" name="IsLike" value="false" />
                            <input type="hidden" id="IsLiked" name="IsLiked=" value="false" />
                            <i class="material-icons meme-icon" onclick="sendForm('dislike')">thumb_down</i>
                        </form>

                        <div class="input-field col s3">
                            <select id="friendSelect">
                                <option value="" disabled selected>Friend..</option>
                                @foreach (FollowingDto following in mutualFollowings)
                                {
                                    <option value="@following.Id">@following.Username</option>
                                }
                            </select>
                            <label>Share with a friend</label>
                        </div>
                        <i class="material-icons col s1 meme-icon">share</i>
                        <div class="input-field col s3">
                            <select id="collectionSelect">
                                <option value="" disabled selected>Collection..</option>
                                @foreach (CollectionDTO collection in collections)
                                {
                                    <option value="@collection.Id">@collection.Name</option>
                                }
                            </select>
                            <label>Add to a collection</label>
                        </div>
                        <i class="material-icons col s1 meme-icon">add_box</i>
                        <i class="material-icons col s1 offset-s1 meme-icon">forum</i>
                    }
                    else
                    {
                        <i class="material-icons col s1 meme-icon">thumb_up</i>
                        <i class="material-icons col s1 meme-icon">thumb_down</i>
                        <i class="material-icons col s1 offset-s9 meme-icon">forum</i>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('select').formSelect();
    });

    function sendForm(name) {
        var form;
        if (name === 'like')
            form = getFormData($('#thumb_upForm'));
        else if (name === 'dislike')
            form = getFormData($('#thumb_downForm'));
        else {
            console.log("sendForm failed: " + name);
            return;
        }

        $.ajax({
            type: "POST",
            url: "/Like",
            contentType: "application/json; charset=utf-8",
            headers: {
                RequestVerificationToken:
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            data: JSON.stringify(form),
            success: function (data) {
                if (data.success === true) {
                    $('#thumbUp').show(); // update icon ?
                }
                else {
                    console.log(data.Message);
                    $('#thumbUpErrorMsg').show();
                }
            },
            error: function () {
                console.log("thumb_upForm resulted faulty..");
            }
        });
    }
        function getFormData($form) {
            var unindexedArray = $form.serializeArray();
            var indexedArray = {};

            $.map(unindexedArray, function (n, i) {
                indexedArray[n['name']] = n['value'];
            });

            return indexedArray;
        }
</script>